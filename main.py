import logging
from aiogram import Bot, Dispatcher, F
from aiogram.filters.command import Command
from handlers import commands, quiz_handlers, stats_handlers
from data.database import create_tables

logging.basicConfig(level=logging.INFO)
API_TOKEN = '–í–∞—à —Ç–æ–∫–µ–Ω'


async def main():
    bot = Bot(token=API_TOKEN)
    dp = Dispatcher()

    await create_tables()

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥
    dp.message.register(commands.cmd_start, Command("start"))
    dp.message.register(commands.cmd_help, Command("help"))
    dp.message.register(quiz_handlers.new_quiz, Command("quiz"))
    dp.message.register(stats_handlers.show_stats, Command("stats"))
    dp.message.register(stats_handlers.show_leaderboard, Command("leaderboard"))

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–Ω–æ–ø–æ–∫
    dp.message.register(quiz_handlers.new_quiz, F.text.in_(["–ù–∞—á–∞—Ç—å –∏–≥—Ä—É", "üéÆ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É"]))
    dp.message.register(stats_handlers.show_stats, F.text.in_(["–ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"]))
    dp.message.register(stats_handlers.show_leaderboard, F.text.in_(["–¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤", "üèÜ –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤"]))
    dp.message.register(commands.cmd_help, F.text.in_(["–ü–æ–º–æ—â—å", "‚ÑπÔ∏è –ü–æ–º–æ—â—å"]))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã
    dp.callback_query.register(quiz_handlers.right_answer, F.data == "right_answer")
    dp.callback_query.register(quiz_handlers.wrong_answer, F.data == "wrong_answer")

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ª—é–±—ã—Ö –¥—Ä—É–≥–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    dp.message.register(commands.handle_unknown_message)

    await dp.start_polling(bot)


if __name__ == "__main__":
    import asyncio

    asyncio.run(main())
    
    
